name: build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13.7'
          cache-dependency-path: 'requirements-dev.txt'

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: 'requirements**.txt'

      - name: Install Python dependencies
        run: make install-dev DC_ENV=ci

      - name: Run lint checks
        run: make lint

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Update and install Linux packages
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install libgdal-dev gdal-bin python3-gdal

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13.7'
          cache-dependency-path: |
            'requirements.txt'
            'requirements-dev.txt'

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: 'requirements**.txt'

      - name: Install Python dependencies
        run: |
          make install DC_ENV=ci
          make install-dev DC_ENV=ci

      - name: Restore data cache
        uses: actions/cache@v4
        with:
          path: Data/
          key: ${{ runner.os }}-data-${{ hashFiles('Data/*') }}
          restore-keys: ${{ runner.os }}-data-

      - name: Download data
        if: ${{ hashFiles('Data/*') == '' }}
        run: make download-soil-data

      - name: Start soil id DB
        run: docker compose up -d

      - name: Run tests
        env:
          DB_NAME: soil_id
          DB_HOST: localhost
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
        run: make test
